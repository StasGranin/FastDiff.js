function fastDiff(t,e){let f,n,o,r=!1,l=!1,c=!1;const i=Object.keys(t),s=Object.keys(e),a=t&&t.constructor||null;if(a!==(e&&e.constructor||null)||a!==Object&&a!==Array)return{leftDiff:t,rightDiff:e,common:null};if(!a)throw new Error("Only arrays and plain objects are allowed");f=new a,n=new a,o=new a;for(let s=0,a=i.length;s<a;s++){const a=i[s],u=t[a];if(a in e){const t=e[a];if("object"!=typeof u&&"object"!=typeof t)u===t?(o[a]=u,c=!0):(f[a]=u,n[a]=t,r=!0,l=!0);else{const e=u&&u.constructor;if(e===(t&&t.constructor))if(e)switch(e){case Array:case Object:const i=fastDiff(u,t);i.leftDiff&&(f[a]=i.leftDiff,r=!0),i.rightDiff&&(n[a]=i.rightDiff,l=!0),i.common&&(o[a]=i.common,c=!0);break;default:u.toString()===t.toString()?(o[a]=u,c=!0):(f[a]=u,n[a]=t,r=!0,l=!0)}else u===t?(o[a]=u,c=!0):(f[a]=u,n[a]=t);else f[a]=u,n[a]=t,r=!0,l=!0}}else f[a]=u,r=!0}for(let f=0,o=s.length;f<o;f++){const o=s[f];o in t||(n[o]=e[o],l=!0)}return{leftDiff:r&&f||null,rightDiff:l&&n||null,common:c&&o||null}}
